<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ZSH | Undefined NULL]]></title>
  <link href="https://www.undefinednull.com/blog/categories/zsh/atom.xml" rel="self"/>
  <link href="https://www.undefinednull.com/"/>
  <updated>2017-02-09T15:59:12+05:30</updated>
  <id>https://www.undefinednull.com/</id>
  <author>
    <name><![CDATA[Shidhin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iTerm tips and zsh plugins for better development environment]]></title>
    <link href="https://www.undefinednull.com/2015/07/31/iterm-tips-and-zsh-plugins-for-better-development-environment/"/>
    <updated>2015-07-31T15:01:07+05:30</updated>
    <id>https://www.undefinednull.com/2015/07/31/iterm-tips-and-zsh-plugins-for-better-development-environment</id>
    <content type="html"><![CDATA[<p>This post is about the two tools I use regularly in my development environment:  <strong>iTerm</strong> and <strong>oh-my-zsh</strong>. <a href="https://www.iterm2.com/">iTerm</a> is a mac terminal replacement and zsh + <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> is an excellent combo to replace the bash shell with some cool stuffs.</p>

<!--more-->


<p><img src="https://lh3.googleusercontent.com/-Ccq2BJHbMmI/Vb8hLcwrnbI/AAAAAAAAk3Y/4Jx8wKfWBSk/s600/iterm-ohmyzsh.png" title="iterm-ohmyzsh.png" alt="iTerm and Oh-my-zsh" /></p>

<p>Here, we&rsquo;ll see how to achieve some productivity improvements by effectively using these tools.</p>

<h2>iTerm</h2>

<p>As I said already, iTerm is a mac terminal replacement. It comes with ton of features missing in default terminal. Below, you will see some of them which made me choose iTerm.</p>

<p><strong>Multiple tabs and split screens</strong></p>

<p>Often we have to work with multiple terminals. iTerm support splitting the current terminal panes vertically/horizontally and adding any number of tabs. The shortcuts for splitting the terminal is <code>CMD+D</code> ( for vertical ) and <code>CMD+SHIFT+D</code> ( for horizontal ).</p>

<p>For adding a new tab, the shortcut is <code>CMD + T</code> ( same like your browser ).</p>

<p><img src="https://lh3.googleusercontent.com/1VEt46R1AIZWg9W1Pj5He78A7ptDUxnk6VKyuxoks-LZ=s1200" title="Screen Shot 2015-07-31 at 11.11.25 AM.png" alt="iTerm tabs split terminal" /></p>

<p><strong>Auto-complete menu</strong></p>

<p>iTerm has a pretty cool drop-down menu for auto-completion.  Press <code>CMD+;</code> from the terminal and you can see the autocomplete dropdown showing the completion.</p>

<p><img src="https://lh3.googleusercontent.com/28zFeuRzWlvcnEag7bH5fbkED-EpPs_Z1-urIKDPbOsK=s1200" title="Screen Shot 2015-07-31 at 11.24.59 AM.png" alt="enter image description here" /></p>

<p><strong>Show paste history</strong></p>

<p>iTerm also keeps a buffer of the previous paste history. You can see the paste history in a dropdown menu by pressing the keys <code>CMD+SHIFT+H</code></p>

<p><img src="https://lh3.googleusercontent.com/bHk6sn9vQaprRLoWZ8nXk5H3dCOo7Y9hrN9IWzi5bT7l=s1200" title="Screen Shot 2015-07-31 at 12.51.41 PM.png" alt="iterm search history" /></p>

<p><strong>Find the cursor</strong></p>

<p>Once you start working with multiple split panes and tabs, sometimes it&rsquo;s hard to find where your cursor is. Press the key combination <code>CMD+/</code> and iTerm will highlight where your cursor is. Pretty smart, huh ?</p>

<p><img src="https://lh3.googleusercontent.com/-yhazmLTbXbE/Vbs2Ka1EdVI/AAAAAAAAknw/Ehj7tIR2LLw/s1200/Screen+Shot+2015-07-31+at+12.39.47+PM.png" title="Screen Shot 2015-07-31 at 12.39.47 PM.png" alt="iterm highlight cursor" /></p>

<p><strong>Search all tabs ( aka Expose tabs )</strong></p>

<p>This is another feature excites me when I have to work with so many tabs or panes. It is hard to move from one tab/pane to another pane when not sure where exactly it is. iTerm can expose all the tabs for you with the key combination <code>CMD+OPTIONS+E</code> and then you can search for the tab.</p>

<p><img src="https://lh3.googleusercontent.com/0tBtS6PAKy96fDhsK-6rEZ7mpag8Y6mWsBC13NbVUgw_=s1200" title="Screen Shot 2015-07-31 at 12.56.05 PM.png" alt="expose tabs iterm" /></p>

<p>This is not the end; iTerm has lot of features, but this post is not enough for explaining all of them. For the complete set of iTerm features, check this <a href="https://iterm2.com/documentation-highlights.html">link</a>.</p>

<h2>ZSH + Oh-My-ZSH</h2>

<p>Like iTerm, ZSH is the default bash shell replacement; and Oh-my-zsh is the framework built for configuring the zsh shell. It also provides extending the framework with custom plugins. This can be done by adding them into the .zshrc file.</p>

<p>From their <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Customization">documentation</a>:</p>

<blockquote><p>Let&rsquo;s say you if you want to add a plugin foobar to your configuration.
edit  the ~/.zshrc file. then add to
plugins=(git bundler foobar)</p></blockquote>

<p>I found some these oh-my-zsh plugins extremely useful in my daily tasks:</p>

<p><strong>The Z plugin</strong></p>

<p>One of my all time favourite plugin. The Z plugin remembers your navigation history in the terminal, and auto completes it for you next time. For example, after enabling the <code>z</code> plugin, if I do this:</p>

<pre><code>cd  ~/Dropbox/code_playground/LookAround
</code></pre>

<p>The <code>z</code> plugin remembers this navigation and the next time I just need to type the following and press <code>TAB</code></p>

<pre><code>z LookAround
</code></pre>

<p>See <code>z</code> in action:</p>

<p><img src="https://lh3.googleusercontent.com/-kDYjTHFSZ8c/Vb8QT0tD6CI/AAAAAAAAk1Y/XcLh-HinVxI/s0/z-plugin.gif" title="z-plugin.gif" alt="zsh z plugin" /></p>

<p><strong>The H plugin</strong></p>

<p>The <code>H</code> plugin lists all your previous command history right there. Sometimes it is easy to see all of them and select the desired one. Enable the <code>h</code> plugin by adding it to the plugin section of .zshrc.</p>

<p>Then, type <code>h</code> in the command prompt and enter.</p>

<p><strong>Git Plugin</strong></p>

<p>This plugin provides a set of git aliases to oh-my-zsh. I use this a lot everyday and I think I might&rsquo;ve forgotten the original git commands now :). Just kidding, this is a wonderful plugin that saves a lot of my time.  See the below image to know how I usually work with these aliases.</p>

<p><img src="https://lh3.googleusercontent.com/-5dd8PIO6EsM/Vb8U-IU02-I/AAAAAAAAk2s/vm7nEywxfWU/s0/git-plugin.gif" title="git-plugin.gif" alt="zsh git plugin" /></p>

<p>I am sure that once you start using this plugin, you won&rsquo;t look back. You can find the complete zsh git cheatsheet here in this <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet#git">link</a></p>

<p><strong>Zsh syntax highlighting plugin</strong></p>

<p>Fish shell like syntax highlighting in your zsh shell. See any of the GIF images, you can observe that the command syntax color changes as when I type.</p>

<p>Read more : <a href="https://github.com/zsh-users/zsh-syntax-highlighting">https://github.com/zsh-users/zsh-syntax-highlighting</a></p>

<p><strong>Open PR from command line</strong></p>

<p>I haven&rsquo;t played around with this plugin much. I included this because I think this might be useful to some of you.</p>

<p><a href="https://github.com/caarlos0/zsh-open-pr">https://github.com/caarlos0/zsh-open-pr</a></p>

<blockquote><p>Basically, when you call open-pr, the function will verify if you are working on a fork (by convention, you have an upstream remote), then, it will open your browser in the correct URL so you can just hit the Create Pull Request button.</p></blockquote>

<p><strong>The <code>take</code> command</strong></p>

<p>One of my  favourite shortcut command provided by Oh-my-zsh. Basically, what the <code>take</code> command does is  to create a directory and change the path to it. So instead of doing the following:</p>

<pre><code>md someDirectory &amp;&amp; cd someDirectory
</code></pre>

<p>I could just do:</p>

<pre><code>take someDirectory
</code></pre>

<p>That&rsquo;s really nice !</p>

<p>Everything else: <a href="https://github.com/unixorn/awesome-zsh-plugins">https://github.com/unixorn/awesome-zsh-plugins</a></p>

<h2>Antigen for ZSH</h2>

<p>Antigen is a simple tool to manage the zsh environment. I recently started using Antigen and it seems a better option for installing plugins and all.</p>

<blockquote><p>Antigen is a small set of functions that help you easily manage your shell (zsh) plugins, called bundles. The concept is pretty much the same as bundles in a typical vim+pathogen setup. Antigen is to zsh, what Vundle is to vim.</p></blockquote>

<p>Find more about Antigen here: <a href="https://github.com/zsh-users/antigen.">https://github.com/zsh-users/antigen.</a></p>

<h2>Summary</h2>

<p>Effectively using tools saves a lot of time and improves productivity. I hope these tips are useful to you. Feedbacks are welcome.</p>
]]></content>
  </entry>
  
</feed>
