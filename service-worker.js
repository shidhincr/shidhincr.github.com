try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class t extends Error{constructor(t,n){super(e(t,n)),this.name=t,this.details=n}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const n=e=>e&&"object"==typeof e?e:{handle:e};class s{constructor(e,t,s="GET"){this.handler=n(t),this.match=e,this.method=s}}class i extends s{constructor(e,t,n){super(({url:t})=>{const n=e.exec(t.href);if(n&&(t.origin===location.origin||0===n.index))return n.slice(1)},t,n)}}const r=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class a{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,n=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith("http"))return;const{params:s,route:i}=this.findMatchingRoute({url:n,request:e,event:t});let r,a=i&&i.handler;if(!a&&this.s&&(a=this.s),a){try{r=a.handle({url:n,request:e,event:t,params:s})}catch(e){r=Promise.reject(e)}return r instanceof Promise&&this.i&&(r=r.catch(s=>this.i.handle({url:n,request:e,event:t}))),r}}findMatchingRoute({url:e,request:t,event:n}){const s=this.t.get(t.method)||[];for(const i of s){let s;const r=i.match({url:e,request:t,event:n});if(r)return s=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(s=void 0),{route:i,params:s}}return{}}setDefaultHandler(e){this.s=n(e)}setCatchHandler(e){this.i=n(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const n=this.t.get(e.method).indexOf(e);if(!(n>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(n,1)}}let o;const c=()=>(o||(o=new a,o.addFetchListener(),o.addCacheListener()),o);function l(e,n,r){let a;if("string"==typeof e){const t=new URL(e,location.href);a=new s(({url:e})=>e.href===t.href,n,r)}else if(e instanceof RegExp)a=new i(e,n,r);else if("function"==typeof e)a=new s(e,n,r);else{if(!(e instanceof s))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return c().registerRoute(a),a}const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>{(e=>{for(const t of Object.keys(u))e(t)})(t=>{"string"==typeof e[t]&&(u[t]=e[t])})},d=e=>e||f(u.precache),p=e=>e||f(u.runtime),w=new Set;const g=(e,t)=>e.filter(e=>t in e),m=async({request:e,mode:t,plugins:n=[]})=>{const s=g(n,"cacheKeyWillBeUsed");let i=e;for(const e of s)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},v=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:i=[]})=>{const r=await self.caches.open(e),a=await m({plugins:i,request:t,mode:"read"});let o=await r.match(a,s);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;o=await i.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:o,request:a})}return o},b=async({cacheName:e,request:n,response:s,event:i,plugins:a=[],matchOptions:o})=>{const c=await m({plugins:a,request:n,mode:"write"});if(!s)throw new t("cache-put-with-no-response",{url:r(c.url)});const l=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let i=t,r=!1;for(const t of s)if("cacheWillUpdate"in t){r=!0;const s=t.cacheWillUpdate;if(i=await s.call(t,{request:e,response:i,event:n}),!i)break}return r||(i=i&&200===i.status?i:void 0),i||null})({event:i,plugins:a,response:s,request:c});if(!l)return;const u=await self.caches.open(e),f=g(a,"cacheDidUpdate"),h=f.length>0?await v({cacheName:e,matchOptions:o,request:c}):null;try{await u.put(c,l)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of w)await e()}(),e}for(const t of f)await t.cacheDidUpdate.call(t,{cacheName:e,event:i,oldResponse:h,newResponse:l,request:c})},y=v,x=async({request:e,fetchOptions:n,event:s,plugins:i=[]})=>{if("string"==typeof e&&(e=new Request(e)),s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const r=g(i,"fetchDidFail"),a=r.length>0?e.clone():null;try{for(const t of i)if("requestWillFetch"in t){const n=t.requestWillFetch,i=e.clone();e=await n.call(t,{request:i,event:s})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const o=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,n);for(const e of i)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:s,request:o,response:t}));return t}catch(e){for(const t of r)await t.fetchDidFail.call(t,{error:e,event:s,originalRequest:a.clone(),request:o.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}const R={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class q{constructor(e={}){if(this.o=p(e.cacheName),this.l=e.plugins||[],e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.l=t?e.plugins:[R,...e.plugins]}else this.l=[R];this.u=e.fetchOptions,this.h=e.matchOptions}async handle({event:e,request:n}){"string"==typeof n&&(n=new Request(n));const s=this.p({request:n,event:e});let i,r=await y({cacheName:this.o,request:n,event:e,matchOptions:this.h,plugins:this.l});if(r){if(e)try{e.waitUntil(s)}catch(i){}}else try{r=await s}catch(e){i=e}if(!r)throw new t("no-response",{url:n.url,error:i});return r}async p({request:e,event:t}){const n=await x({request:e,event:t,fetchOptions:this.u,plugins:this.l}),s=b({cacheName:this.o,request:e,response:n.clone(),event:t,plugins:this.l});if(t)try{t.waitUntil(s)}catch(e){}return n}}try{self["workbox:navigation-preload:5.1.4"]&&_()}catch(e){}let U;async function L(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},i=t?t(s):s,r=function(){if(void 0===U){const e=new Response("");if("body"in e)try{new Response(e.body),U=!0}catch(e){U=!1}U=!1}return U}()?n.body:await n.blob();return new Response(r,i)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function j(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:n,url:s}=e;if(!s)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!n){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(s,location.href),r=new URL(s,location.href);return i.searchParams.set("__WB_REVISION__",n),{cacheKey:i.href,url:r.href}}class N{constructor(e){this.o=d(e),this.g=new Map,this.m=new Map,this.v=new Map}addToCacheList(e){const n=[];for(const s of e){"string"==typeof s?n.push(s):s&&void 0===s.revision&&n.push(s.url);const{cacheKey:e,url:i}=j(s),r="string"!=typeof s&&s.revision?"reload":"default";if(this.g.has(i)&&this.g.get(i)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.g.get(i),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this.v.has(e)&&this.v.get(e)!==s.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:i});this.v.set(e,s.integrity)}if(this.g.set(i,e),this.m.set(i,r),n.length>0){const e="Workbox is precaching URLs without revision "+`info: ${n.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],i=await self.caches.open(this.o),r=await i.keys(),a=new Set(r.map(e=>e.url));for(const[e,t]of this.g)a.has(t)?s.push(e):n.push({cacheKey:t,url:e});const o=n.map(({cacheKey:n,url:s})=>{const i=this.v.get(n),r=this.m.get(s);return this.R({cacheKey:n,cacheMode:r,event:e,integrity:i,plugins:t,url:s})});return await Promise.all(o),{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this.o),t=await e.keys(),n=new Set(this.g.values()),s=[];for(const i of t)n.has(i.url)||(await e.delete(i),s.push(i.url));return{deletedURLs:s}}async R({cacheKey:e,url:n,cacheMode:s,event:i,plugins:r,integrity:a}){const o=new Request(n,{integrity:a,cache:s,credentials:"same-origin"});let c,l=await x({event:i,plugins:r,request:o});for(const e of r||[])"cacheWillUpdate"in e&&(c=e);if(!(c?await c.cacheWillUpdate({event:i,request:o,response:l}):l.status<400))throw new t("bad-precaching-response",{url:n,status:l.status});l.redirected&&(l=await L(l)),await b({event:i,plugins:r,response:l,request:e===n?o:new Request(e),cacheName:this.o,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.g}getCachedURLs(){return[...this.g.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.g.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this.o)).match(n)}}createHandler(e=!0){return async({request:n})=>{try{const e=await this.matchPrecache(n);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.o,url:n instanceof Request?n.url:n})}catch(t){if(e)return fetch(n);throw t}}}createHandlerBoundToURL(e,n=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const s=this.createHandler(n),i=new Request(e);return()=>s({request:i})}}let E;const O=()=>(E||(E=new N),E);const M=(e,t)=>{const n=O().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:i}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const a=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(r,t);if(yield a.href,n&&a.pathname.endsWith("/")){const e=new URL(a.href);e.pathname+=n,yield e.href}if(s){const e=new URL(a.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:r});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let k=!1;function K(e){k||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:s}={})=>{const i=d();self.addEventListener("fetch",r=>{const a=M(r.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:s});if(!a)return;let o=self.caches.open(i).then(e=>e.match(a)).then(e=>e||fetch(a));r.respondWith(o)})})(e),k=!0)}const T=[],C={get:()=>T,add(e){T.push(...e)}},P=e=>{const t=O(),n=C.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},S=e=>{const t=O();e.waitUntil(t.activate())};var W,F;Boolean(self.registration&&self.registration.navigationPreload)&&self.addEventListener("activate",e=>{e.waitUntil(self.registration.navigationPreload.enable().then(()=>{W&&self.registration.navigationPreload.setHeaderValue(W)}))}),h({prefix:"eleventy-plugin-pwa"}),self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",()=>self.clients.claim()),F={},function(e){O().addToCacheList(e),e.length>0&&(self.addEventListener("install",P),self.addEventListener("activate",S))}([{url:"2013/09/26/some-gotchas-in-arithmetic-expression-evaluation-javascript/index.html",revision:"ffe132bc1ef967c9c3c1112adf231029"},{url:"2013/10/15/octopress-blog-tweaks-adding-author-information-section-below-each-posts/index.html",revision:"4c6bd806d6149e85a40f8e9e3646394b"},{url:"2014/02/03/multiple-left-hand-assignment-in-javascript-is-really-bad-think-once-before-you-do-it/index.html",revision:"1c4db578afad27ee4224b10a97e7e3e9"},{url:"2014/02/11/mastering-the-scope-of-a-directive-in-angularjs/index.html",revision:"5c48518bb0441b56864330080bdf93cc"},{url:"2014/02/17/resolve-in-angularjs-routes-explained-as-story/index.html",revision:"cac0bae077f40483fb588eead0cb66da"},{url:"2014/02/25/angularjs-real-time-model-persistence-using-local-storage/index.html",revision:"08677f8b5b16eadc30daf4eabcbe28d4"},{url:"2014/06/26/explaining-call-and-apply-in-javascript-through-mr-dot-dave/index.html",revision:"e11555682c5d4a8300ed75b7e26abcbe"},{url:"2014/07/07/practical-guide-to-prelink-postlink-and-controller-methods-of-angular-directives/index.html",revision:"024002b8b48f8c21768043f9ba7c7931"},{url:"2014/08/11/a-brief-walk-through-of-the-ng-options-in-angularjs/index.html",revision:"1cdd13ee900d9223204cca53749f9cdb"},{url:"2015/03/17/remote-debugging-localhost-with-weinre/index.html",revision:"bd7d7582e706e9084bb886b9faf30d45"},{url:"2015/03/19/implementing-a-curry-function-in-javascript-using-tdd/index.html",revision:"6555d6e880bd457b35ffda79bb5f8cbb"},{url:"2015/04/10/repeating-multiple-elements-using-ng-repeat-start-and-ng-repeat-end-in-angularjs/index.html",revision:"d6804ae8825b34268104181e3eab5f66"},{url:"2015/05/03/react-tdd-example-unit-testing-and-building-a-react-component-with-jest-gulp-and-react-test-utils/index.html",revision:"3fe84256866ce371435bb896431e320b"},{url:"2015/07/31/iterm-tips-and-zsh-plugins-for-better-development-environment/index.html",revision:"32e83b2a1fac92e910e6f40e126e1970"},{url:"2015/12/27/injecting-custom-javascript-into-react-natives-webview/index.html",revision:"bbb1985123ff2e4efc71d47d8cad3cda"},{url:"2016/01/21/react-redux-part-1-implementing-a-counter-component-in-react-by-using-state/index.html",revision:"d7bf6aed6409fe09fd504e2a42241006"},{url:"2016/04/21/debugging-react-native-apps-using-visual-studio-code/index.html",revision:"f69cc75a4114feaf4f194a9579e04b13"},{url:"404.html",revision:"6a6401e15613a7818a839d7a132d9a82"},{url:"about/index.html",revision:"1e005d544134c6110bae9ca7a8cb5323"},{url:"archive/index.html",revision:"8961bc0daa2a5bca25ae69a08d41f584"},{url:"img/favicon.ico",revision:"2d1aefa2d4432083fe876eaba13bb1bb"},{url:"index.html",revision:"709331e38f805f31aa26d039a972a1fc"},{url:"manifest.json",revision:"078d50a769bacf73822ec49b371a2df7"},{url:"page-list/1/index.html",revision:"c28039dcd5ec1a03b8a81976174da4c9"},{url:"page-list/index.html",revision:"fc6b30909ffdc6980c044e0c9142c658"},{url:"posts/2013-09-25-starting-my-new-blog-finally-octopress/index.html",revision:"40bc5ccec0622608a1b7ec9da5affccb"},{url:"posts/2014-07-15-setting-up-my-macbook-for-development-environment/index.html",revision:"5904d7420cf8de726524b929090de6c4"},{url:"posts/fix-the-flow-server-is-not-responding-issue-mac-osx/index.html",revision:"7345891bd9be38a8d5f819866a327e54"},{url:"posts/improve-website-speed-with-link-preload/index.html",revision:"43885cdb668b128339cfeb5934399b28"},{url:"tags/index.html",revision:"76f5aadd3e6a39da7089c33be9e55f80"}]),K(F),self.addEventListener("activate",e=>{const t=d();e.waitUntil((async(e,t="-precache-")=>{const n=(await self.caches.keys()).filter(n=>n.includes(t)&&n.includes(self.registration.scope)&&n!==e);return await Promise.all(n.map(e=>self.caches.delete(e))),n})(t).then(e=>{}))}),l(/^.*\.(html|jpg|png|gif|webp|ico|svg|woff2|woff|eot|ttf|otf|ttc|json)$/,new q,"GET"),l(/^https?:\/\/fonts\.googleapis\.com\/css/,new q,"GET");
//# sourceMappingURL=service-worker.js.map
